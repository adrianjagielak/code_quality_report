analyzer:
  enable-experiment:
    - non-nullable

linter:
  rules:
    # STYLE
    - camel_case_types
    - camel_case_extensions
    - library_names
    - file_names
    - library_prefixes
    - non_constant_identifier_names
    - constant_identifier_names # prefer
    - directives_ordering
    - lines_longer_than_80_chars # avoid
    - curly_braces_in_flow_control_structures

    # DOCUMENTATION
    - slash_for_doc_comments
    - package_api_docs # prefer

    # USAGE
    - implementation_imports
    - avoid_relative_lib_imports # prefer
    - prefer_relative_imports # prefer
    - prefer_adjacent_string_concatenation
    - prefer_interpolation_to_compose_strings # prefer
    - unnecessary_brace_in_string_interps # avoid
    - prefer_collection_literals
    - avoid_function_literals_in_foreach_calls # avoid
    - prefer_iterable_whereType
    - prefer_function_declarations_over_variables
    - unnecessary_lambdas
    - prefer_equal_for_default_values
    - avoid_init_to_null
    - unnecessary_getters_setters
    - unnecessary_this
    - prefer_initializing_formals
    - type_init_formals
    - empty_constructor_bodies
    - unnecessary_new
    - unnecessary_const
    - avoid_catching_errors
    - use_rethrow_when_possible

    # DESIGN
    - use_to_and_as_if_applicable # prefer
    - one_member_abstracts # avoid
    - avoid_classes_with_only_static_members # avoid
    - prefer_mixin
    - prefer_final_fields # prefer
    - use_setters_to_change_properties
    - avoid_setters_without_getters
    - avoid_returning_null # avoid
    - avoid_returning_this # avoid
    - type_annotate_public_apis # prefer
    #    - avoid_types_on_closure_parameters # avoid
    - avoid_return_types_on_setters # avoid
    - prefer_generic_function_type_aliases
    - avoid_private_typedef_functions # prefer
    - avoid_positional_boolean_parameters # avoid
    - hash_and_equals
    - avoid_equals_and_hash_code_on_mutable_classes # avoid
    - avoid_null_checks_in_equality_operators

    # PEDANTIC
    - avoid_empty_else
    - avoid_types_as_parameter_names
    - no_duplicate_case_values
    - always_declare_return_types
    - annotate_overrides
    - avoid_shadowing_type_parameters
    - empty_catches
    - null_closures
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_for_elements_to_map_fromIterable
    - prefer_if_null_operators
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_single_quotes
    - prefer_spread_collections
    - recursive_getters
    - unawaited_futures
    - unnecessary_null_in_if_null_operators
    - use_function_type_syntax_for_parameters

    # from FLUTTER linter
    - cancel_subscriptions
    - close_sinks
    - control_flow_in_finally
    - empty_statements
    - throw_in_finally
    - unnecessary_statements
    - unrelated_type_equality_checks
    - valid_regexps
    - await_only_futures
    - package_names

    # OTHER
    - avoid_slow_async_io
    - invariant_booleans
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_logic_in_create_state
    - prefer_void_to_null
    - unsafe_html
    - avoid_bool_literals_in_conditional_expressions
    - avoid_escaping_inner_quotes
    - avoid_field_initializers_in_const_classes
    - avoid_renaming_method_parameters
    - avoid_returning_null_for_void
    - avoid_single_cascade_in_expression_statements
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - cascade_invocations
    - flutter_style_todos
    - missing_whitespace_between_adjacent_strings
    - no_runtimeType_toString
    - only_throw_errors
    - overridden_fields
    - parameter_assignments
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_constructors_over_static_methods
    - prefer_if_elements_to_conditional_expressions
    - prefer_inlined_adds
    - prefer_is_not_operator
    - prefer_null_aware_operators
    - provide_deprecation_message
    - sized_box_for_whitespace
    - sort_child_properties_last
    - sort_unnamed_constructors_first
    - unnecessary_await_in_return
    - unnecessary_null_aware_assignments
    - unnecessary_nullable_for_final_variable_declarations
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - use_full_hex_values_for_flutter_colors
    - use_is_even_rather_than_modulo
    - use_late_for_private_fields_and_variables
    - use_raw_strings
    - void_checks
    - sort_pub_dependencies
    - avoid_unnecessary_containers # Only useful for Flutter

    # MAY CAUSE INCONVENIENCES IN NON-JS
    - avoid_double_and_int_checks
    - avoid_js_rounded_ints

    # NOT RELEASED
    - avoid_type_to_string
    - cast_nullable_to_non_nullable
    - null_check_on_nullable_type_parameter
    - tighten_type_of_initializing_formals
    - unnecessary_null_checks

    # NOT SURE
    - always_put_control_body_on_new_line # controversial
    - avoid_as
    - avoid_redundant_argument_values # controversial
    - no_default_cases # controversial
    - prefer_typing_uninitialized_variables # probably is redundant

    # TO CONSIDER
    # - always_specify_types # I wish
    # - avoid_annotating_with_dynamic # may create problems with jsons
    # - do_not_use_environment # ???
    # - exhaustive_cases # ?
    # - join_return_with_assignment # ?
    # - leading_newlines_in_multiline_strings # ?
    # - prefer_const_constructors # Probably not
    # - prefer_const_constructors_in_immutables # Probably not
    # - prefer_const_declarations # ?
    # - prefer_const_literals_to_create_immutables # Probably not
    # - prefer_final_in_for_each # Maybe in the future
    # - prefer_final_locals # Maybe in the future
    # - prefer_foreach
    # - prefer_int_literals

    # PROBABLY
    - sort_constructors_first
    - unnecessary_final # needs to be tested
    - use_string_buffers

    # FLUTTER INCOMPATIBLE
    # - always_put_required_named_parameters_first
    # - prefer_expression_function_bodies
    # - unnecessary_overrides
